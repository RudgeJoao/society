@page "/LocacaoTeste"
@using Radzen
@using Radzen.Blazor
@using Society.Repositories
@using Society.Models
@inject ILocacaoRepository LocacaoRepository
@inject IDialogService MudDialogService
@inject Radzen.DialogService DialogService
@inject TooltipService TooltipService

<MudText Typo="Typo.h3" GutterBottom="true">Escolha o dia da reserva:</MudText>
<MudText Typo="Typo.h4" GutterBottom="true">Horário de funcionamento de 12:00h - 18:00</MudText>

<MudText Typo="Typo.h2">Quadras</MudText>
<MudButton Variant="MudBlazor.Variant.Filled" EndIcon="@Icons.Material.Filled.PersonAddAlt1" Color="Color.Primary" OnClick="@(() => OpenDialogCreate(dia))">Cadastrar nova quadra</MudButton>

<MudDatePicker Label="Basic example" @bind-Date="dia"/>

<MudTable Items="@Locacoes">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Cliente</MudTh>
        <MudTh>Quadra</MudTh>
        <MudTh>Inicio</MudTh>
        <MudTh>Fim</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">@context.Id</MudTd>
        <MudTd DataLabel="Nome Cliente">@context.Cliente.Nome</MudTd>
        <MudTd DataLabel="Nome quadra">@context.Quadra.Name</MudTd>
        <MudTd DataLabel="Horario inicio" HideSmall="_hidePosition">@context.Inicio</MudTd>
        <MudTd DataLabel="Horario Fim">@context.Fim</MudTd>
    </RowTemplate>
</MudTable>

@code {
    RadzenScheduler<Models.Locacao> LocacoesScheduler;
    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    private IEnumerable<Models.Locacao> Locacoes = new List<Models.Locacao>();
    DateTime? dia = DateTime.Today;
    private bool _hidePosition;
    private bool _loading;
    MudMessageBox mboxExcluir { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Locacoes = await LocacaoRepository.ListarLocacoesAsync();
    }

    private async Task OpenDialogCreate(DateTime? dia)
    {
        var parameters = new DialogParameters
        {
            {"Dia", dia }
        };

        var options = new MudBlazor.DialogOptions { CloseOnEscapeKey = true };
        var dialog = MudDialogService.Show<CreateLocacaoDialog>("Criar reserva",parameters ,options);
        var result = await dialog.Result;

        if (result?.Data is bool success && success)
        {
            Locacoes = await LocacaoRepository.ListarLocacoesAsync();
        }
    }

}